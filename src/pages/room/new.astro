---
import { prisma } from '../../db/client';

const checkIfRoomIdExists = async (roomId: string) => {
	const room = await prisma.room.findFirst({
		where: {
			id: roomId,
		},
	});
	return !!room;
};

const generateRoomId = async (length = 4): Promise<string | false> => {
	let str = '';
	do {
		str = '';
		for (let i = 0; i < length; i++) {
			let num = Math.floor(Math.random() * 36);
			str += num < 10 ? num.toString() : String.fromCharCode(num + 55);
		}
		const similarChars: [string, string][] = [
			['O', '0'],
			['I', '1'],
			['L', '1'],
			['S', '5'],
		];

		similarChars.forEach(([oldChar, newChar]) => {
			str = str.replaceAll(oldChar, newChar);
		});
	} while (await checkIfRoomIdExists(str));

	return str;
};

let roomId = await generateRoomId();
const room = await prisma.room.create({
	data: {
		id: roomId,
	},
});

if (room) return Astro.redirect(`/room/${room.id}`);
---
